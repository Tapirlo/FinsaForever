// <auto-generated />
using CorsiOnline.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FinsaWeb.Migrations
{
    [DbContext(typeof(ContestoCorso))]
    partial class ContestoCorsoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CorsiOnline.Models.Database.Aula", b =>
                {
                    b.Property<string>("NomeAula")
                        .HasColumnName("nomeaula")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("NumeroComputer")
                        .HasColumnName("numerocomputer");

                    b.Property<int>("NumeroPosti")
                        .HasColumnName("numeroposti");

                    b.Property<int>("Superficie")
                        .HasColumnName("superficie");

                    b.HasKey("NomeAula");

                    b.ToTable("aule");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.Corso", b =>
                {
                    b.Property<string>("IDCorso")
                        .HasColumnName("idcorso")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataFine")
                        .HasColumnName("datafine")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnName("datainizio")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("IDCorso");

                    b.ToTable("corsi");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.DocenteCorso", b =>
                {
                    b.Property<string>("Corso")
                        .HasColumnName("corso")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Docente")
                        .HasColumnName("docente")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<int?>("Punteggio")
                        .HasColumnName("punteggio");

                    b.HasKey("Corso", "Docente");

                    b.HasIndex("Docente");

                    b.ToTable("docenticorsi");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.Insegnamento", b =>
                {
                    b.Property<string>("Docente")
                        .HasColumnName("docente")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Materia")
                        .HasColumnName("materia")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Docente", "Materia");

                    b.ToTable("insegnamenti");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.MateriaCorso", b =>
                {
                    b.Property<string>("Corso")
                        .HasColumnName("corso")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Materia")
                        .HasColumnName("materia")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Corso", "Materia");

                    b.ToTable("materiecorsi");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.PrenotazioneAula", b =>
                {
                    b.Property<string>("Corso")
                        .HasColumnName("corso")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Aula")
                        .HasColumnName("aula")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<DateTime>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.HasKey("Corso", "Aula", "Data");

                    b.HasIndex("Aula");

                    b.ToTable("prenotazioniaule");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.Studente", b =>
                {
                    b.Property<string>("CodiceFiscale")
                        .HasColumnName("codicefiscale")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnName("cognome")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataNascita")
                        .HasColumnName("datanascita");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Sesso")
                        .IsRequired()
                        .HasColumnName("sesso")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("CodiceFiscale");

                    b.ToTable("studenti");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.StudenteCorso", b =>
                {
                    b.Property<string>("Corso")
                        .HasColumnName("corso")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Studente")
                        .HasColumnName("studente")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<int?>("Punteggio")
                        .HasColumnName("punteggio")
                        .HasMaxLength(25);

                    b.HasKey("Corso", "Studente");

                    b.HasIndex("Studente");

                    b.ToTable("studenticorsi");
                });

            modelBuilder.Entity("CorsiOnline.Models.Docente", b =>
                {
                    b.Property<string>("CodiceFiscale")
                        .HasColumnName("codicefiscale")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnName("cognome")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<DateTime>("DataNascita")
                        .HasColumnName("datanascita");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnName("telefono")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("CodiceFiscale");

                    b.ToTable("docenti");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.DocenteCorso", b =>
                {
                    b.HasOne("CorsiOnline.Models.Database.Corso", "CorsoNavigation")
                        .WithMany("DocentiCorsi")
                        .HasForeignKey("Corso")
                        .HasConstraintName("FK__docentico__idcor__403A8C7D");

                    b.HasOne("CorsiOnline.Models.Docente", "DocenteNavigation")
                        .WithMany("DocentiCorsi")
                        .HasForeignKey("Docente")
                        .HasConstraintName("FK__docentico__docen__412EB0B6");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.Insegnamento", b =>
                {
                    b.HasOne("CorsiOnline.Models.Docente", "DocenteNavigation")
                        .WithMany("Insegnamenti")
                        .HasForeignKey("Docente")
                        .HasConstraintName("FK__insegname__inseg__4D94879B");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.MateriaCorso", b =>
                {
                    b.HasOne("CorsiOnline.Models.Database.Corso", "CorsoNavigation")
                        .WithMany("MaterieCorsi")
                        .HasForeignKey("Corso")
                        .HasConstraintName("FK__materieco__corso__3D5E1FD2");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.PrenotazioneAula", b =>
                {
                    b.HasOne("CorsiOnline.Models.Database.Aula", "AulaNavigation")
                        .WithMany("PrenotazioniAule")
                        .HasForeignKey("Aula")
                        .HasConstraintName("FK__svolgimen__nomea__46E78A0C");

                    b.HasOne("CorsiOnline.Models.Database.Corso", "CorsoNavigation")
                        .WithMany("PrenotazioniAule")
                        .HasForeignKey("Corso")
                        .HasConstraintName("FK__svolgimen__idcor__45F365D3");
                });

            modelBuilder.Entity("CorsiOnline.Models.Database.StudenteCorso", b =>
                {
                    b.HasOne("CorsiOnline.Models.Database.Corso", "CorsoNavigation")
                        .WithMany("StudentiCorsi")
                        .HasForeignKey("Corso")
                        .HasConstraintName("FK__studentic__idcor__49C3F6B7");

                    b.HasOne("CorsiOnline.Models.Database.Studente", "StudenteNavigation")
                        .WithMany("StudentiCorsi")
                        .HasForeignKey("Studente")
                        .HasConstraintName("FK__studentic__stude__4AB81AF0");
                });
#pragma warning restore 612, 618
        }
    }
}
